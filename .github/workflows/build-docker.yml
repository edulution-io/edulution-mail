name: Build docker image

on:

  push:
    branches: ["main", "dev"]

  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  docker:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}-docker
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read version
        id: version
        run: |
          if [ -f VERSION ]; then
            VERSION=$(cat VERSION)
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "version=latest" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Docker tags
        id: docker-tags
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "tags=ghcr.io/${{ github.repository }}:${VERSION},ghcr.io/${{ github.repository }}:main,ghcr.io/${{ github.repository }}:latest" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo "tags=ghcr.io/${{ github.repository }}:${VERSION}-dev,ghcr.io/${{ github.repository }}:dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "feature/versioning-system" ]]; then
            echo "tags=ghcr.io/${{ github.repository }}:${VERSION}-test,ghcr.io/${{ github.repository }}:versioning-test" >> $GITHUB_OUTPUT
          else
            echo "tags=ghcr.io/${{ github.repository }}:${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Extract metadata (labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build docker container
        uses: docker/build-push-action@v4
        with:
          context: ./build/ 
          file: ./build/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker-tags.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}